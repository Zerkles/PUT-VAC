{
 "swagger": "2.0",
 "basePath": "/",
 "paths": {
  "/VAC/": {
   "get": {
    "responses": {
     "200": {
      "description": "Success"
     }
    },
    "summary": "Returns text indicating that server is working",
    "operationId": "vac_test",
    "tags": [
     "VAC"
    ]
   }
  },
  "/VAC/connect": {
   "get": {
    "responses": {
     "401": {
      "description": "Unauthorized"
     },
     "200": {
      "description": "Success"
     }
    },
    "summary": "Executes connect procedure",
    "operationId": "connect",
    "parameters": [
     {
      "description": "User login",
      "name": "login",
      "type": "string",
      "in": "query"
     },
     {
      "description": "User password",
      "name": "passwd",
      "type": "string",
      "in": "query"
     }
    ],
    "tags": [
     "VAC"
    ]
   }
  },
  "/VAC/db/Logs": {
   "get": {
    "responses": {
     "400": {
      "description": "Missing arguments"
     },
     "200": {
      "description": "Success",
      "schema": {
       "$ref": "#/definitions/Database table"
      }
     }
    },
    "summary": "Returns chosen entry types from logs",
    "operationId": "get_logs",
    "parameters": [
     {
      "description": "Type of data to get from table",
      "name": "type",
      "type": "string",
      "in": "query"
     },
     {
      "description": "Data format to receive",
      "name": "format",
      "type": "string",
      "in": "query"
     }
    ],
    "tags": [
     "VAC/db"
    ]
   }
  },
  "/VAC/db/Statistics": {
   "get": {
    "responses": {
     "401": {
      "description": "Unauthorized"
     },
     "400": {
      "description": "Missing arguments"
     },
     "200": {
      "description": "Success",
      "schema": {
       "$ref": "#/definitions/Database table"
      }
     }
    },
    "summary": "Returns chosen statistics from database",
    "operationId": "get_statistics",
    "parameters": [
     {
      "description": "User login",
      "name": "login",
      "type": "string",
      "in": "query"
     },
     {
      "description": "User password",
      "name": "passwd",
      "type": "string",
      "in": "query"
     },
     {
      "description": "Type of data to get from table",
      "name": "type",
      "type": "string",
      "in": "query"
     }
    ],
    "tags": [
     "VAC/db"
    ]
   }
  },
  "/VAC/db/Test_Table": {
   "get": {
    "responses": {
     "200": {
      "description": "Success",
      "schema": {
       "$ref": "#/definitions/Database table"
      }
     }
    },
    "summary": "Returns test table from database",
    "operationId": "get_test_table",
    "tags": [
     "VAC/db"
    ]
   }
  },
  "/VAC/db/Users": {
   "parameters": [
    {
     "name": "payload",
     "required": true,
     "in": "body",
     "schema": {
      "$ref": "#/definitions/Login data"
     }
    }
   ],
   "post": {
    "responses": {
     "409": {
      "description": "User already exists"
     },
     "201": {
      "description": "Created"
     }
    },
    "summary": "Adds user to database",
    "operationId": "post_db_users",
    "tags": [
     "VAC/db"
    ]
   },
   "delete": {
    "responses": {
     "401": {
      "description": "Unauthorized"
     },
     "200": {
      "description": "Success"
     }
    },
    "summary": "Removes user from database",
    "operationId": "delete_db_users",
    "tags": [
     "VAC/db"
    ]
   }
  },
  "/VAC/disconnect": {
   "get": {
    "responses": {
     "409": {
      "description": "Not connected"
     },
     "200": {
      "description": "Success"
     }
    },
    "summary": "Disconnects connected client",
    "operationId": "disconnect",
    "parameters": [
     {
      "description": "User login",
      "name": "login",
      "type": "string",
      "in": "query"
     },
     {
      "description": "User password",
      "name": "passwd",
      "type": "string",
      "in": "query"
     }
    ],
    "tags": [
     "VAC"
    ]
   }
  },
  "/VAC/login": {
   "get": {
    "responses": {
     "401": {
      "description": "Unauthorized"
     },
     "200": {
      "description": "Success"
     }
    },
    "summary": "Authenticates user",
    "operationId": "login",
    "parameters": [
     {
      "description": "User login",
      "name": "login",
      "type": "string",
      "in": "query"
     },
     {
      "description": "User login",
      "name": "passwd",
      "type": "string",
      "in": "query"
     },
     {
      "description": "Client OS name",
      "name": "os",
      "type": "string",
      "in": "query"
     },
     {
      "description": "Client OS version",
      "name": "os_ver",
      "type": "string",
      "in": "query"
     },
     {
      "description": "Client device brand",
      "name": "brand",
      "type": "string",
      "in": "query"
     },
     {
      "description": "Client device model",
      "name": "model",
      "type": "string",
      "in": "query"
     }
    ],
    "tags": [
     "VAC"
    ]
   }
  },
  "/VAC/manager": {
   "get": {
    "responses": {
     "200": {
      "description": "Success"
     }
    },
    "summary": "Returns VAC manager site",
    "operationId": "get_manager",
    "tags": [
     "VAC"
    ]
   }
  },
  "/VAC/schema": {
   "get": {
    "responses": {
     "200": {
      "description": "Success"
     }
    },
    "summary": "Returns swagger json",
    "operationId": "schema",
    "tags": [
     "VAC"
    ]
   }
  },
  "/VAC/shutdown": {
   "get": {
    "responses": {
     "200": {
      "description": "Success"
     }
    },
    "summary": "Starts server shutdown procedure",
    "operationId": "Shutdown_server",
    "tags": [
     "VAC"
    ]
   }
  }
 },
 "info": {
  "title": "VAC API",
  "version": "1.0",
  "description": "An API for VAC project"
 },
 "produces": [
  "application/json",
  "text/html"
 ],
 "consumes": [
  "application/json"
 ],
 "tags": [
  {
   "name": "VAC/db",
   "description": "Operations related to database"
  },
  {
   "name": "VAC",
   "description": "Operations related to base functionality"
  }
 ],
 "definitions": {
  "Database table": {
   "required": [
    "0"
   ],
   "properties": {
    "0": {
     "type": "array",
     "minItems": 1,
     "items": {
      "type": "string"
     }
    },
    "1": {
     "type": "array",
     "minItems": 1,
     "items": {
      "type": "string"
     }
    },
    "2": {
     "type": "array",
     "minItems": 1,
     "items": {
      "type": "string"
     }
    },
    "...": {
     "type": "array",
     "minItems": 1,
     "items": {
      "type": "string"
     }
    },
    "n": {
     "type": "array",
     "minItems": 1,
     "items": {
      "type": "string"
     }
    }
   },
   "type": "object"
  },
  "Login data": {
   "required": [
    "login",
    "passwd"
   ],
   "properties": {
    "login": {
     "type": "string"
    },
    "passwd": {
     "type": "string"
    }
   },
   "type": "object"
  }
 },
 "responses": {
  "ParseError": {
   "description": "When a mask can't be parsed"
  },
  "MaskError": {
   "description": "When any error occurs on mask"
  }
 }
}